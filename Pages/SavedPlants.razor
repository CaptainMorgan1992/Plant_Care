@page "/savedPlants"
@using Auth0_Blazor.Models
@using Auth0_Blazor.Services
@using Auth0_Blazor.Icons
@inject ILogger<SavedPlants> Logger
@inject Services.UserService UserService
@inject Services.UserPlantService UserPlantService
@inject PlantService PlantService
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <MudText Typo="Typo.h5">
            Household Plants
        </MudText>
        <div class="grid-layout-cards">
            @foreach(var userplant in UserPlants) {
                if (userplant.Plant == null)
                {
                    throw new KeyNotFoundException($"Plant not found for UserPlant with ID {userplant.Id}.");
                }
                {
                    <div style="flex: 1 1 300px; max-width: 300px">
                        <MudCard Class="m-2 rounded-3 d-flex plantcard">
                            <div class="image-container-relative">
                                <MudCardMedia Image="@userplant.Plant.ImageUrl" Height="250" Class="object-fit-cover"/>
                                <MudButton Class="button-bottom-right"
                                           OnClick="@(() => RemovePlantFromHousehold(@userplant.Plant.Id))">
                                        <DeleteSymbol/>
                                    </MudButton>
                            </div>
                            <MudCardContent Class="d-flex flex-column align-items-center justify-content-center gap-3">
                                <MudText Typo="Typo.h5">
                                    @userplant.Plant.Name
                                </MudText>
                                <MudText Typo="Typo.body2">
                                    @Truncate(userplant.Plant.Description, 70)
                                </MudText>
                            </MudCardContent>
                            <MudCardActions Class="d-flex align-items-center justify-content-center ">
                                <MudButton Variant="Variant.Text" Class="mb-3 green-text transparent-button"
                                           OnClick="@(() => NavigateToPlantById(@userplant.Plant.Id))">Learn more
                                </MudButton>
                            </MudCardActions>
                        </MudCard>
                    </div>
                }
            }
        </div>
    </Authorized>
</AuthorizeView>

@code {

    public required List<UserPlant> UserPlants;

    protected override async Task OnInitializedAsync()
    {
        UserPlants = await UserPlantService.GetUserPlantsAsync();
    }
    
    private static string Truncate(string text, int maxLength)
    {
        return UtilityService.TruncateText(text, maxLength);
    }
        
    private void NavigateToPlantById(int id)
    {
        NavigationManager.NavigateTo($"/plants/{id}");
    }
    
    private async Task RemovePlantFromHousehold(int plantId)
    {
        await UserPlantService.RemovePlantFromUserHouseholdAsync(plantId);
        
        // Remove plant from local list
        var plantToRemove = UserPlants.FirstOrDefault(p => p.Id == plantId);
        if (plantToRemove != null)
            UserPlants.Remove(plantToRemove);
        UserPlants = await UserPlantService.GetUserPlantsAsync();
        await InvokeAsync(StateHasChanged);
    }
    
}